{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/funcionario-add/funcionario-add.component.html","webpack:///./src/app/funcionario-edit/funcionario-edit.component.html","webpack:///./src/app/funcionario-get/funcionario-get.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/funcionario-add/funcionario-add.component.css","webpack:///./src/app/funcionario-add/funcionario-add.component.ts","webpack:///./src/app/funcionario-edit/funcionario-edit.component.css","webpack:///./src/app/funcionario-edit/funcionario-edit.component.ts","webpack:///./src/app/funcionario-get/funcionario-get.component.css","webpack:///./src/app/funcionario-get/funcionario-get.component.ts","webpack:///./src/app/funcionario.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<ng2-slim-loading-bar color=\\\"purple\\\" height=\\\"10px\\\" progress=10></ng2-slim-loading-bar>\\n\\n<nav class=\\\"navbar navbar-expand-sm\\\" bg-light>\\n  <div class=\\\"container-fluid\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"funcionario/create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Adicionar Funcionario</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"funcionario\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">Funcionários</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"funcionarioForm\\\">\\n      <div class=\\\"col-md-6 col-md-offset-3\\\">\\n\\n        <!-- INÍCIO BLOCO: Nome do Funcionário -->\\n        <div class=\\\"form-group\\\">\\n          <label>Nome</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nomeFuncionario\\\" #nomeFuncionario>\\n        </div>\\n        <div *ngIf=\\\"funcionarioForm.controls['nomeFuncionario'].invalid\\n              && (funcionarioForm.controls['nomeFuncionario'].dirty\\n              || funcionarioForm.controls['nomeFuncionario'].touched)\\\"\\n              class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"funcionarioForm.controls['nomeFuncionario'].errors.required\\\">\\n            O campo 'Nome' é obrigatório.\\n          </div>\\n        </div>\\n        <!-- FIM BLOCO: Nome do Funcionário -->\\n\\n        <!-- INÍCIO BLOCO: Cargo/Profissão -->\\n        <div class=\\\"form-group\\\">\\n          <label>Cargo</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"cargo\\\" #cargo>\\n        </div>\\n        <div *ngIf=\\\"funcionarioForm.controls['cargo'].invalid\\n              && (funcionarioForm.controls['cargo'].dirty\\n              || funcionarioForm.controls['cargo'].touched)\\\"\\n              class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"funcionarioForm.controls['cargo'].errors.required\\\">\\n            O campo 'Cargo' é obrigatório.\\n          </div>\\n        </div>\\n        <!-- FIM BLOCO: Cargo/Profissão -->\\n\\n        <!-- INÍCIO BLOCO: Nome do Número Identificador -->\\n        <div class=\\\"form-group\\\">\\n          <label>Número Identificador</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"numeroIdentificador\\\" #numeroIdentificador>\\n        </div>\\n        <div *ngIf=\\\"funcionarioForm.controls['numeroIdentificador'].invalid\\n              && (funcionarioForm.controls['numeroIdentificador'].dirty\\n              || funcionarioForm.controls['numeroIdentificador'].touched)\\\"\\n              class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"funcionarioForm.controls['numeroIdentificador'].errors.required\\\">\\n            O campo 'Número Identificador' é obrigatório.\\n          </div>\\n        </div>\\n        <!-- FIM BLOCO: Número Identificador -->\\n\\n        <div class=\\\"form-group\\\">\\n          <button (click)=\\\"adicionarFuncionario(nomeFuncionario.value, cargo.value, numeroIdentificador.value)\\\"\\n            class=\\\"btn btn-primary\\\"\\n            [disabled]=\\\"funcionarioForm.pristine || funcionarioForm.invalid\\\">\\n            <fa name=\\\"plus\\\"></fa> Funcionário\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form [formGroup]=\\\"funcionarioForm\\\" novalidate>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Nome do Funcionário</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n          formControlName=\\\"nomeFuncionario\\\"\\n          #nomeFuncionario\\n          [(ngModel)]=\\\"funcionario.nomeFuncionario\\\"/>\\n      </div>\\n      <div *ngIf=\\\"funcionarioForm.controls['nomeFuncionario'].invalid && (funcionarioForm.controls['nomeFuncionario'].dirty || funcionarioForm.controls['nomeFuncionario'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"funcionarioForm.controls['nomeFuncionario'].errors.required\\\">\\n          Campo Obrigatório.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Cargo</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n          formControlName=\\\"cargo\\\"\\n          #cargo\\n          [(ngModel)]=\\\"funcionario.cargo\\\"/>\\n      </div>\\n      <div *ngIf=\\\"funcionarioForm.controls['cargo'].invalid && (funcionarioForm.controls['cargo'].dirty || funcionarioForm.controls['cargo'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"funcionarioForm.controls['cargo'].errors.required\\\">\\n          Campo Obrigatório.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Número Identificador</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n          formControlName=\\\"numeroIdentificador\\\"\\n          #numeroIdentificador\\n          [(ngModel)]=\\\"funcionario.numeroIdentificador\\\"/>\\n      </div>\\n      <div *ngIf=\\\"funcionarioForm.controls['numeroIdentificador'].invalid && (funcionarioForm.controls['numeroIdentificador'].dirty || funcionarioForm.controls['numeroIdentificador'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"funcionarioForm.controls['numeroIdentificador'].errors.required\\\">\\n          Campo Obrigatório.\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <button (click)=\\\"atualizarFuncionario(nomeFuncionario.value, cargo.value, numeroIdentificador.value)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n          [disabled]=\\\"funcionarioForm.invalid\\\"><fa name=\\\"edit\\\"></fa> Atualizar\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"<table class=\\\"table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <td ><b>Nome do Funcionário</b></td>\\n      <td align=\\\"center\\\"><b>Cargo</b></td>\\n      <td align=\\\"center\\\"><b>Número Identificador</b></td>\\n      <td colspan=\\\"2\\\" align=\\\"center\\\"><b>Ações</b></td>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let funcionario of funcionarios\\\">\\n      <td>{{ funcionario.nomeFuncionario }}</td>\\n      <td align=\\\"center\\\">{{ funcionario.cargo }}</td>\\n      <td align=\\\"center\\\">{{ funcionario.numeroIdentificador }}</td>\\n      <td align=\\\"center\\\"><a [routerLink]=\\\"['/funcionario', funcionario._id]\\\" class=\\\"btn btn-success\\\"> <fa name=\\\"edit\\\"></fa> Editar</a></td>\\n      <td align=\\\"center\\\"><button (click)=\\\"excluirFuncionario(funcionario._id)\\\" class=\\\"btn btn-danger\\\"> <fa name=\\\"trash\\\"></fa> Excluir</button></td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FuncionarioAddComponent } from './funcionario-add/funcionario-add.component';\nimport { FuncionarioEditComponent } from './funcionario-edit/funcionario-edit.component';\nimport { FuncionarioGetComponent } from './funcionario-get/funcionario-get.component';\n\nconst routes: Routes = [\n  { path: 'funcionario/create', component: FuncionarioAddComponent },\n  { path: 'funcionario/:id', component: FuncionarioEditComponent },\n  { path: 'funcionario', component: FuncionarioGetComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\nimport { NavigationCancel, Event, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front';\n\n  constructor(private loadingBar: SlimLoadingBarService, private router: Router) {\n    this.router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n\n  /**\n   * Método responsável por tratar os eventos do 'SlimLoadingBar'\n   */\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this.loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this.loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this.loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this.loadingBar.stop();\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FuncionarioAddComponent } from './funcionario-add/funcionario-add.component';\nimport { FuncionarioGetComponent } from './funcionario-get/funcionario-get.component';\nimport { FuncionarioEditComponent } from './funcionario-edit/funcionario-edit.component';\nimport { FuncionarioService } from './funcionario.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FuncionarioAddComponent,\n    FuncionarioGetComponent,\n    FuncionarioEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SlimLoadingBarModule,\n    AngularFontAwesomeModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [ FuncionarioService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z1bmNpb25hcmlvLWFkZC9mdW5jaW9uYXJpby1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FuncionarioService } from '../funcionario.service';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-funcionario-add',\n  templateUrl: './funcionario-add.component.html',\n  styleUrls: ['./funcionario-add.component.css']\n})\nexport class FuncionarioAddComponent implements OnInit {\n\n  funcionarioForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private funcionarioService: FuncionarioService) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.funcionarioForm = this.formBuilder.group({\n      nomeFuncionario: ['', Validators.required],\n      cargo: ['', Validators.required],\n      numeroIdentificador: ['', Validators.required]\n    });\n  }\n\n  adicionarFuncionario(nomeFuncionario, cargo, numeroIdentificador) {\n    this.funcionarioService.adicionarFuncionario(nomeFuncionario, cargo, numeroIdentificador);\n\n    Swal.fire({\n      title: 'Funcionário criado(a) com Sucesso!',\n      type: 'success',\n      showConfirmButton: true,\n      timer: 1500\n    });\n\n    this.funcionarioForm.reset();\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z1bmNpb25hcmlvLWVkaXQvZnVuY2lvbmFyaW8tZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FuncionarioService } from '../funcionario.service';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-funcionario-edit',\n  templateUrl: './funcionario-edit.component.html',\n  styleUrls: ['./funcionario-edit.component.css']\n})\nexport class FuncionarioEditComponent implements OnInit {\n\n  funcionarioForm: FormGroup;\n  funcionario: any = {};\n\n  constructor(private route: ActivatedRoute, private router: Router, private funcionarioService: FuncionarioService,\n              private formBuilder: FormBuilder) {\n                this.createForm();\n  }\n\n  createForm() {\n    this.funcionarioForm = this.formBuilder.group({\n      nomeFuncionario: ['', Validators.required],\n      cargo: ['', Validators.required],\n      numeroIdentificador: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.funcionarioService.editFuncionario(params.id).subscribe(res => {\n        this.funcionario = res;\n      });\n    });\n  }\n\n  /**\n   * Método responsável por atualizar o 'Funcionario'\n   */\n  atualizarFuncionario(nomeFuncionario, cargo, numeroIdentificador, id) {\n    this.route.params.subscribe(params => {\n      this.funcionarioService.atualizarFuncionario(nomeFuncionario, cargo, numeroIdentificador, params.id);\n      // ==> Depois que clicar no botão 'Atualizar' redirecionar para a lista de Funcionarios\n      this.router.navigate(['funcionario']);\n\n      Swal.fire({\n        title: 'Funcionário atualizado(a) com Sucesso!',\n        type: 'success',\n        showConfirmButton: true,\n        timer: 1500\n      });\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z1bmNpb25hcmlvLWdldC9mdW5jaW9uYXJpby1nZXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport Funcionario from '../Funcionario';\nimport { FuncionarioService } from '../funcionario.service';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-funcionario-get',\n  templateUrl: './funcionario-get.component.html',\n  styleUrls: ['./funcionario-get.component.css']\n})\nexport class FuncionarioGetComponent implements OnInit {\n\n  funcionarios: Funcionario[];\n\n  constructor(private funcionarioService: FuncionarioService) { }\n\n  ngOnInit() {\n    this.funcionarioService\n      .getFuncionarios()\n      .subscribe((data: Funcionario[]) => {\n        this.funcionarios = data;\n    });\n  }\n\n  /**\n   * Método responsável por excluir um 'Funcionario' pelo 'Id'\n   */\n  excluirFuncionario(id: any) {\n    this.funcionarioService.excluirFuncionario(id).subscribe(res => {\n      const index = this.funcionarios.indexOf(id);\n      this.funcionarios.splice(index, 1);\n\n      Swal.fire({\n        title: 'Você tem certeza que deseja excluir o(a) Funcionário?',\n        text: 'Atenção! Este Funcionário será Excluído(a)!',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Sim. Exclua!'\n      }).then((result) => {\n        if (result.value) {\n          Swal.fire(\n            'Excluído(a)!',\n            'Funcionário foi excluído(a).',\n            'success'\n          );\n        }\n      });\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FuncionarioService {\n\n  // ==> Uri da api (Back-End)\n  uri = 'http://localhost:7071/api';\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Método responsável por criar um novo 'Funcionario'\n   */\n  adicionarFuncionario(nomeFuncionario, cargo, numeroIdentificador) {\n    const funcionario = {\n      nomeFuncionario,\n      cargo,\n      numeroIdentificador\n    };\n    console.log(funcionario);\n\n    // ==> (POST - Url no Back-End): http://localhost:8000/api/funcionario\n    this\n      .http\n      .post(`${this.uri}/funcionarios`, funcionario)\n      .subscribe(res => console.log('Feito'));\n  }\n\n  /**\n   * Método responsável por selecionar todos os 'Funcionarios'\n   */\n  getFuncionarios() {\n    // ==> (GET - Url no Back-End): http://localhost:8000/api/funcionarios\n    return this\n      .http\n      .get(`${this.uri}/funcionarios`);\n  }\n\n  /**\n   * Método responsável por atualizar o 'Funcionario' pelo 'Id':\n   */\n  editFuncionario(id) {\n    // ==> (GET by Id- Url no Back-End): (GET): localhost:8000/api/funcionario/:id\n    return this\n      .http\n      .get(`${this.uri}/funcionarios/${id}`);\n  }\n\n  atualizarFuncionario(nomeFuncionario, cargo, numeroIdentificador, id) {\n    const funcionario = {\n      nomeFuncionario,\n      cargo,\n      numeroIdentificador\n    };\n\n    // ==> (PUT by Id - Url no Back-End): (UPDATE): localhost:8000/api/funcionario/:id\n    this\n      .http\n      .put(`${this.uri}/funcionarios/${id}`, funcionario)\n      .subscribe(res => console.log('Done!'));\n  }\n\n  /**\n   * Método responsável por excluir um 'Funcionario' pelo 'Id':\n   */\n  excluirFuncionario(id) {\n    // ==> (DELETE by Id - Url no Back-End): (DELETE): localhost:8000/api/funcionario/:id\n    return this\n      .http\n      .delete(`${this.uri}/funcionarios/${id}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}